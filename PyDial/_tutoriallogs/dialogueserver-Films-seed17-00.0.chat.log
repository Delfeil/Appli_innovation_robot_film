INFO   :: 18:30:41: root                       FlatOntologyManager.py <_set_ontology>93 :  Loading ontology: ontology/ontologies/Films-rules.json
INFO   :: 18:30:41: root                            FlatOntologyManager.py <_set_db>109 :  Loading database: ontology/ontologies/Films-dbase.db
INFO   :: 18:30:41: root                                      pydial.py <initialise>374 :  Seed = 117
INFO   :: 18:30:41: root                                      pydial.py <initialise>375 :  Root = /home/casanova/master/s3/application_innovation/Application Interaction vocale/projet_robotparlant/PyDial
DIAL   :: 18:30:41: root                                   pydial.py <chat_command>1126 :  *** Chatting with policies []: ***
INFO   :: 18:30:41: root                                    Agent.py <_hand_control>453 :  Launching Dialogue Manager for domain: Films
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      RegexSemI.py <__init__>83 :  No rTYPE regex has been set.
WARNING:: 18:30:41: root                                      HDCPolicy.py <__init__>82 :  Policy file is given: , but policy type is set to hdc. Ignoring the given policy file and using hdc policy.
WARNING:: 18:30:41: root                            Agent.py <_logical_requirements>405 :  Enforcing hello() at first turn in singledomain system
WARNING:: 18:30:41: root                                             Texthub.py <run>87 :  NOTE: texthub is not using any error simulation at present.
DIAL   :: 18:30:41: root                                       Agent.py <start_call>170 :  >> NEW DIALOGUE SESSION. Number: 1
INFO   :: 18:30:41: root                                    Agent.py <_hand_control>470 :  Domain Films is both already running and has control
DIAL   :: 18:30:41: root                                      Agent.py <_print_turn>579 :  ** Turn 0 **
DIAL   :: 18:30:41: root                                   Agent.py <_print_sys_act>595 :  | Sys > hello()
DIAL   :: 18:30:41: root                                     Agent.py <_agents_semo>680 :  Domain with CONTROL: Films
DIAL   :: 18:30:56: root                                    Agent.py <continue_call>232 :  user input: [("je veux voir un film d'action sans restriction", 1.0)]
DIAL   :: 18:30:56: root                                      Agent.py <_print_turn>579 :  ** Turn 1 **
INFO   :: 18:30:56: root                              TopicTracking.py <track_topic>146 :  After user_act - domain is now: Films
INFO   :: 18:30:56: root                                    Agent.py <_hand_control>470 :  Domain Films is both already running and has control
INFO   :: 18:30:56: root               SemIContextUtils.py <_add_context_to_user_act>61 :  Possibly adding context to user semi hyps: [[u'inform(restriction=none)', 1.0]]
INFO   :: 18:30:56: root               SemIContextUtils.py <_add_context_to_user_act>61 :  Possibly adding context to user semi hyps: [[u'inform(genre=action)', 1.0]]
INFO   :: 18:30:56: root               SemIContextUtils.py <_add_context_to_user_act>61 :  Possibly adding context to user semi hyps: [[u'inform(type=films)', 1.0]]
INFO   :: 18:30:56: root                                            SemI.py <decode>201 :  [('inform(genre=action,restriction=none,type=films)', 1.0)]
INFO   :: 18:30:56: root               SemIContextUtils.py <_add_context_to_user_act>61 :  Possibly adding context to user semi hyps: [('inform(genre=action,restriction=none,type=films)', 1.0)]
INFO   :: 18:30:56: root         ModularSemanticBeliefTracker.p <update_belief_state>86 :  SemI   > [('inform(genre=action,restriction=none,type=films)', 1.0)]
DIAL   :: 18:30:56: root                                   Agent.py <_print_sys_act>595 :  | Sys > inform(genre="action",restriction="none",name="midway")
DIAL   :: 18:30:56: root                                     Agent.py <_agents_semo>680 :  Domain with CONTROL: Films
DIAL   :: 18:31:02: root                                    Agent.py <continue_call>232 :  user input: [('synopsis', 1.0)]
DIAL   :: 18:31:02: root                                      Agent.py <_print_turn>579 :  ** Turn 2 **
INFO   :: 18:31:02: root                              TopicTracking.py <track_topic>146 :  After user_act - domain is now: Films
INFO   :: 18:31:02: root                                    Agent.py <_hand_control>470 :  Domain Films is both already running and has control
INFO   :: 18:31:02: root               SemIContextUtils.py <_add_context_to_user_act>61 :  Possibly adding context to user semi hyps: [[u'request(synopsis)', 1.0]]
INFO   :: 18:31:02: root               SemIContextUtils.py <_add_context_to_user_act>61 :  Possibly adding context to user semi hyps: [['negate()', 1.0]]
WARNING:: 18:31:02: root                       SemIContextUtils.py <_convert_yes_no>161 :  affirm or negate in response to currently unhandled system_act:
 inform(genre="action",restriction="none",name="midway")
INFO   :: 18:31:02: root                                            SemI.py <decode>201 :  [('negate()|request(synopsis)', 1.0)]
INFO   :: 18:31:02: root               SemIContextUtils.py <_add_context_to_user_act>61 :  Possibly adding context to user semi hyps: [('negate()|request(synopsis)', 1.0)]
INFO   :: 18:31:02: root         ModularSemanticBeliefTracker.p <update_belief_state>86 :  SemI   > [('negate()|request(synopsis)', 1.0)]
DIAL   :: 18:31:02: root                                   Agent.py <_print_sys_act>595 :  | Sys > inform(name="midway",synopsis="apres la debacle de pearl harbor qui a laisse la flotte americaine devastee, la marine imperiale japonaise prepare une nouvelle attaque qui devrait eliminer definitivement les forces aeronavales restantes de son adversaire. la campagne du pacifique va se jouer dans un petit atoll isole du pacifique nord : midway. l'amiral nimitz, a la tete de la flotte americaine, voit cette bataille comme l'ultime chance de renverser la superiorite japonaise. une course contre la montre s'engage alors pour edwin layton qui doit percer les codes secrets de la flotte japonaise et, grace aux renseignements, permettre aux pilotes de l'aviation americaine de faire face a la plus grande offensive jamais menee pendant ce conflit")
DIAL   :: 18:31:02: root                                     Agent.py <_agents_semo>680 :  Domain with CONTROL: Films
